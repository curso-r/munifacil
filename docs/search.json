[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 munifacil authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fernando Correa. Maintainer, author. Julio Trecenti. Author. Beatriz Milz. Author. Curso-R. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Correa F, Trecenti J, Milz B (2023). munifacil: Pacote para facilitar o join com nome de municipios. R package version 0.0.0.9000, https://github.com/curso-r/munifacil.","code":"@Manual{,   title = {munifacil: Pacote para facilitar o join com nome de municipios},   author = {Fernando Correa and Julio Trecenti and Beatriz Milz},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/curso-r/munifacil}, }"},{"path":"/index.html","id":"munifacil","dir":"","previous_headings":"","what":"Pacote para facilitar o join com nome de municipios","title":"Pacote para facilitar o join com nome de municipios","text":"O pacote munifacil tem como objetivo facilitar união de colunas de nome de município com o respectivo código IBGE. Isso é útil para posteriormente realizar procedimentos de join usando como chave coluna código IBGE (como o dplyr::left_join()).","code":""},{"path":"/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Pacote para facilitar o join com nome de municipios","text":"Este pacote atualmente não está disponível CRAN, podendo ser instalado através GitHub, utilizando o código abaixo:","code":"install.packages(\"remotes\") remotes::install_github(\"curso-r/munifacil\")"},{"path":"/index.html","id":"exemplo-de-uso","dir":"","previous_headings":"","what":"Exemplo de uso","title":"Pacote para facilitar o join com nome de municipios","text":"","code":"# Carregar o pacote munifacil library(munifacil)  # Importar uma base de dados usada neste exemplo arquivo <- system.file(\"extdata/exemplo.csv\", package = \"munifacil\") base_de_exemplo_bruta <- readr::read_csv(arquivo) #> Rows: 6786 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (5): Cidade abrangida, Código do IBGE - cidade abrangida, Cidade abrangi... #> dbl (1): Indicador Valor #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  # ver quais são as colunas disponíveis # Nessa base, temos o nome do município, a UF, e o código do IBGE que usaremos para validar posteriormente dplyr::glimpse(base_de_exemplo_bruta) #> Rows: 6,786 #> Columns: 6 #> $ `Cidade abrangida`                  <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOU… #> $ `Código do IBGE - cidade abrangida` <chr> \"5200050\", \"3100104\", \"5200100\", \"… #> $ `Cidade abrangida UF`               <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\"… #> $ `Tribunal UF`                       <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\"… #> $ `Tribunal município`                <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\"… #> $ `Indicador Valor`                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…  # vamos limpar o nome das colunas base_de_exemplo <- base_de_exemplo_bruta |>    janitor::clean_names() |>    # buscar apenas linhas distintas segundo essas colunas   dplyr::distinct(cidade_abrangida, codigo_do_ibge_cidade_abrangida, cidade_abrangida_uf)   # ver novamente a base de exemplo limpa dplyr::glimpse(base_de_exemplo) #> Rows: 4,578 #> Columns: 3 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P…  # Usar o munifacil  resultado <- base_de_exemplo %>%    # aqui é necessario indicar o nome da coluna que contém o nome das cidades, e    # o nome da coluna que contém o nome das UFs   limpar_colunas(col_muni = cidade_abrangida, col_uf = cidade_abrangida_uf) %>%    # cria uma coluna \"id_municipio\"   incluir_codigo_ibge() #> • Ainda faltam 1 (0%) casos... São eles: #> • - - -  # ver o resultado dplyr::glimpse(resultado) #> Rows: 4,578 #> Columns: 11 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ uf_join                         <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ muni_join                       <chr> \"abadia de goias\", \"abadia dos dourado… #> $ id_municipio                    <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ manual                          <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FAL… #> $ atencao                         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FAL… #> $ existia_1991                    <lgl> FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, T… #> $ existia_2000                    <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR… #> $ existia_2010                    <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR…  # resultados que nao receberam o id do municipio resultado %>%    dplyr::filter(is.na(id_municipio)) #> # A tibble: 1 × 11 #>   cidade_abrangida codigo_do_ibge_cidade…¹ cidade_abrangida_uf uf_join muni_join #>   <chr>            <chr>                   <chr>               <chr>   <chr>     #> 1 -                -                       -                   -       -         #> # ℹ abbreviated name: ¹​codigo_do_ibge_cidade_abrangida #> # ℹ 6 more variables: id_municipio <chr>, manual <lgl>, atencao <lgl>, #> #   existia_1991 <lgl>, existia_2000 <lgl>, existia_2010 <lgl>  # Verificando a quantidade de resultados corretos resultado %>%    dplyr::count(codigo_do_ibge_cidade_abrangida == id_municipio) #> # A tibble: 3 × 2 #>   `codigo_do_ibge_cidade_abrangida == id_municipio`     n #>   <lgl>                                             <int> #> 1 FALSE                                                14 #> 2 TRUE                                               4563 #> 3 NA                                                    1"},{"path":"/reference/depara_muni_codigo.html","id":null,"dir":"Reference","previous_headings":"","what":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"Uma base de dados manual com varias opções de nomes de municipios para dar join","code":""},{"path":"/reference/depara_muni_codigo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"","code":"depara_muni_codigo()"},{"path":"/reference/depara_muni_codigo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"Um data frame com 8 colunas muni_join nome municipio (arrumado) uf_join nome da uf (arrumado) codigo_ibge codigo ibge (7 digitos) manual foi feito manualmente? atencao tomar cuidado? existia_1991 municipio existia em 1991? existia_2000 municipio existia em 2000? existia_2010 municipio existia em 2010?","code":""},{"path":"/reference/incluir_codigo_ibge.html","id":null,"dir":"Reference","previous_headings":"","what":"Incluir o codigo do IBGE — incluir_codigo_ibge","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"Incluir o codigo IBGE","code":""},{"path":"/reference/incluir_codigo_ibge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"","code":"incluir_codigo_ibge(   data_set,   tabela_referencia = munifacil::depara_muni_codigo(),   diagnostico = TRUE )"},{"path":"/reference/incluir_codigo_ibge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"data_set base de dados arrumada, com colunas muni_join e uf_join tabela_referencia tabela de referencia. Por padrão usa uma base interna diagnostico imprimir diagnostico?","code":""},{"path":"/reference/limpar_colunas.html","id":null,"dir":"Reference","previous_headings":"","what":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Cria coluna limpa partir nome bruto dos municipios","code":""},{"path":"/reference/limpar_colunas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"","code":"limpar_colunas(data_set, col_muni, col_uf, default_muni, default_uf)"},{"path":"/reference/limpar_colunas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"data_set base de dados col_muni nome da coluna de municipio ser arrumada, sem aspas. col_uf nome da coluna de UF ser arrumada, sem aspas. default_muni (opcional) String. Ao invés de passar o nome de uma coluna de entrada, você pode preencher coluna de saída com uma string fixa. default_uf (opcional)  String. Ao invés de passar o nome de uma coluna de entrada, você pode preencher coluna de saída com uma string fixa.","code":""},{"path":"/reference/limpar_colunas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Esta funcao retorna base data_set acrescida das colunas \"muni_join\" e \"uf_join\". Essas colunas serao usadas na funcao incluir_codigo_ibge.","code":""},{"path":"/reference/limpar_colunas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Por padrao, o pacote espera receber os nomes das colunas nao em formato string, ou seja, sem aspas. Strings podem ser fornecidas para preencher colunas de saida com valores fixo, o seu valor sera utilizado para preencher colunas novas.","code":""},{"path":"/reference/limpar_muni.html","id":null,"dir":"Reference","previous_headings":"","what":"Limpa nome bruto dos municipios — limpar_muni","title":"Limpa nome bruto dos municipios — limpar_muni","text":"Limpa nome bruto dos municipios","code":""},{"path":"/reference/limpar_muni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limpa nome bruto dos municipios — limpar_muni","text":"","code":"limpar_muni(col)"},{"path":"/reference/limpar_muni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limpa nome bruto dos municipios — limpar_muni","text":"col coluna ser arrumada","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
