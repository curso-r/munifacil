[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 munifacil authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fernando Correa. Maintainer, author. Julio Trecenti. Author. Beatriz Milz. Author. Curso-R. Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Correa F, Trecenti J, Milz B (2024). munifacil: Pacote para facilitar o join com nome de municipios. R package version 0.0.0.9000, https://github.com/curso-r/munifacil.","code":"@Manual{,   title = {munifacil: Pacote para facilitar o join com nome de municipios},   author = {Fernando Correa and Julio Trecenti and Beatriz Milz},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://github.com/curso-r/munifacil}, }"},{"path":"/index.html","id":"munifacil","dir":"","previous_headings":"","what":"Pacote para facilitar o join com nome de municipios","title":"Pacote para facilitar o join com nome de municipios","text":"O pacote munifacil tem como objetivo facilitar união de colunas de nome de município com o respectivo código IBGE. Isso é útil para posteriormente realizar procedimentos de join usando como chave coluna código IBGE (como o dplyr::left_join()).","code":""},{"path":"/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Pacote para facilitar o join com nome de municipios","text":"Este pacote atualmente não está disponível CRAN, podendo ser instalado através GitHub, utilizando o código abaixo:","code":"install.packages(\"remotes\") remotes::install_github(\"curso-r/munifacil\")"},{"path":"/index.html","id":"exemplo-de-uso","dir":"","previous_headings":"","what":"Exemplo de uso","title":"Pacote para facilitar o join com nome de municipios","text":"Neste exemplo, vamos usar uma base de dados que contém o nome de municípios e UF, e vamos incluir o código IBGE.","code":""},{"path":"/index.html","id":"preparando-os-dados","dir":"","previous_headings":"Exemplo de uso","what":"Preparando os dados","title":"Pacote para facilitar o join com nome de municipios","text":"Primeiro, vamos carregar os pacotes necessários e importar base de dados que usaremos neste exemplo. Vamos dar uma olhada na base de dados que usaremos como exemplo. Nessa base, temos o nome município, UF, e o código IBGE que usaremos para validar posteriormente: Agora, vamos limpar o nome das colunas e remover uma linha que não tem informação. Alguns valores da coluna codigo_do_ibge_cidade_abrangida estão com mais de 7 dígitos, então vamos manter apenas os 7 primeiros dígitos (o número de dígitos utilizado pelo IBGE para identificar os municípios). Essa etapa é feita apenas para facilitar visualização exemplo, e não é necessária para o uso pacote.","code":"library(munifacil) library(tidyverse) arquivo <- system.file(\"extdata/exemplo.csv\", package = \"munifacil\") base_de_exemplo_bruta <- read_csv(arquivo) glimpse(base_de_exemplo_bruta) #> Rows: 6,786 #> Columns: 6 #> $ `Cidade abrangida`                  <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOU… #> $ `Código do IBGE - cidade abrangida` <chr> \"5200050\", \"3100104\", \"5200100\", \"… #> $ `Cidade abrangida UF`               <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\"… #> $ `Tribunal UF`                       <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\"… #> $ `Tribunal município`                <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\"… #> $ `Indicador Valor`                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… base_de_exemplo <- base_de_exemplo_bruta |>   janitor::clean_names() |>   filter(cidade_abrangida != \"-\",          codigo_do_ibge_cidade_abrangida !=  \"-\") |>   mutate(     # manter apenas os 7 primeiros dígitos da coluna codigo_do_ibge_cidade_abrangida     codigo_do_ibge_cidade_abrangida = str_sub(codigo_do_ibge_cidade_abrangida, 1, 7))  glimpse(base_de_exemplo) #> Rows: 5,534 #> Columns: 6 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_uf                     <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_municipio              <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\", \"A… #> $ indicador_valor                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…"},{"path":"/index.html","id":"utilizando-o-pacote-munifacil","dir":"","previous_headings":"Exemplo de uso","what":"Utilizando o pacote munifacil","title":"Pacote para facilitar o join com nome de municipios","text":"Agora, vamos usar o pacote munifacil para incluir o código IBGE na base de dados. primeira etapa necessária é limpar o nome das colunas que contém o nome município e UF. Isso é feito com função limpar_colunas(). Na base base_colunas_limpas, agora temos duas novas colunas: uf_join e muni_join. Essas colunas estão “limpas”, de forma que facilite união com tabela de “de-para” que contém os códigos IBGE para cada município. Agora, vamos incluir o código IBGE na base de dados. Isso é feito com função incluir_codigo_ibge(). Veja que ao usar função incluir_codigo_ibge(), por padrão uma mensagem sobre quantidade de resultados que não receberam o id município é impressa. Isso é útil para verificar se existem municípios que não foram encontrados na base de “de-para”. Essa mensagem pode ser desativada com o argumento diagnostico = FALSE. função incluir_codigo_ibge() adiciona seguintes colunas na base de dados: id_municipio - código IBGE para cada município. manual - informação utilizada para unir os valores foram incluídos manualmente na tabela de de-para. atencao - indica que é importante ter atenção nesses casos. Por exemplo: podem ser municípios com nomes similares, o mesmo nome de município em UFs diferentes, etc. existia_1991 - O municipio existia em 1991? existia_2000 - O municipio existia em 2000? existia_2010 - O municipio existia em 2010? Dentre colunas citadas acima, principal é id_municipio, que é o código IBGE para cada município. outras colunas são úteis para verificar se união foi feita corretamente. Podemos remover colunas que foram adicionadas e não são necessárias para análise. Verificando o resultado final:","code":"base_colunas_limpas <- base_de_exemplo %>%    limpar_colunas(col_muni = cidade_abrangida,                  col_uf = cidade_abrangida_uf)  glimpse(base_colunas_limpas) #> Rows: 5,534 #> Columns: 8 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_uf                     <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_municipio              <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\", \"A… #> $ indicador_valor                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ uf_join                         <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ muni_join                       <chr> \"abadia de goias\", \"abadia dos dourado… resultado <- base_colunas_limpas %>%    incluir_codigo_ibge() #> ✔ Uhul! Deu certo! glimpse(resultado) #> Rows: 5,539 #> Columns: 14 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_uf                     <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_municipio              <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\", \"A… #> $ indicador_valor                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ uf_join                         <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ muni_join                       <chr> \"abadia de goias\", \"abadia dos dourado… #> $ id_municipio                    <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ manual                          <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FAL… #> $ atencao                         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FAL… #> $ existia_1991                    <lgl> FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, T… #> $ existia_2000                    <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR… #> $ existia_2010                    <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TR… resultado_limpo <- resultado %>%   select(-c(manual, atencao, starts_with(\"existia\"),             uf_join, muni_join)) glimpse(resultado_limpo) #> Rows: 5,539 #> Columns: 7 #> $ cidade_abrangida                <chr> \"ABADIA DE GOIÁS\", \"ABADIA DOS DOURADO… #> $ codigo_do_ibge_cidade_abrangida <chr> \"5200050\", \"3100104\", \"5200100\", \"3100… #> $ cidade_abrangida_uf             <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_uf                     <chr> \"GO\", \"MG\", \"GO\", \"MG\", \"PA\", \"CE\", \"P… #> $ tribunal_municipio              <chr> \"GUAPO\", \"COROMANDEL\", \"ABADIÂNIA\", \"A… #> $ indicador_valor                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ id_municipio                    <chr> \"5200050\", \"3100104\", \"5200100\", \"3100…"},{"path":"/index.html","id":"verificando-o-resultado","dir":"","previous_headings":"Exemplo de uso","what":"Verificando o resultado","title":"Pacote para facilitar o join com nome de municipios","text":"Quantidade de resultados que não receberam o ID município: Todos os municípios receberam o ID IBGE! Mas esses IDs estão corretos?","code":"resultado_limpo %>%    dplyr::filter(is.na(id_municipio)) #> # A tibble: 0 × 7 #> # ℹ 7 variables: cidade_abrangida <chr>, codigo_do_ibge_cidade_abrangida <chr>, #> #   cidade_abrangida_uf <chr>, tribunal_uf <chr>, tribunal_municipio <chr>, #> #   indicador_valor <dbl>, id_municipio <chr> # Verificando a quantidade de resultados corretos resultado_limpo %>%    mutate(resultado_correto = codigo_do_ibge_cidade_abrangida == id_municipio) %>%    count(resultado_correto) %>%    mutate(porcentagem = formattable::percent(n / sum(n))) %>%   knitr::kable()"},{"path":"/index.html","id":"como-contribuir","dir":"","previous_headings":"","what":"Como contribuir?","title":"Pacote para facilitar o join com nome de municipios","text":"Caso encontre alguma variação de escrita de nomes de municípios que não seja na tabela “de-para” atual pacote munifacil, você pode contribuir com o pacote enviando essa sugestão. Para isso, você pode abrir uma issue, ou enviar um pull request adicionando sugestão arquivo inst/depara_muni_codigo.csv.","code":""},{"path":"/reference/depara_muni_codigo.html","id":null,"dir":"Reference","previous_headings":"","what":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"Uma base de dados manual com varias opções de nomes de municipios para dar join","code":""},{"path":"/reference/depara_muni_codigo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"","code":"depara_muni_codigo()"},{"path":"/reference/depara_muni_codigo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lista de candidatos a municipios do Brasil — depara_muni_codigo","text":"Um data frame com 8 colunas muni_join nome municipio (arrumado) uf_join nome da uf (arrumado) codigo_ibge codigo ibge (7 digitos) manual foi feito manualmente? atencao tomar cuidado? existia_1991 municipio existia em 1991? existia_2000 municipio existia em 2000? existia_2010 municipio existia em 2010?","code":""},{"path":"/reference/diagnostico_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Realizar diagnóstico do join — diagnostico_join","title":"Realizar diagnóstico do join — diagnostico_join","text":"Realizar diagnóstico join","code":""},{"path":"/reference/diagnostico_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Realizar diagnóstico do join — diagnostico_join","text":"","code":"diagnostico_join(resultado)"},{"path":"/reference/diagnostico_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Realizar diagnóstico do join — diagnostico_join","text":"resultado Tibble que é resultado left_join entre tabela de referência e base de dados passada para função incluir_codigo_ibge()","code":""},{"path":"/reference/diagnostico_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Realizar diagnóstico do join — diagnostico_join","text":"função imprime um diagnóstico na tela, informando se o join foi bem sucedido ou não. Caso o join tenha falhado, função imprime uma lista com os municípios que não foram encontrados na tabela de referência.","code":""},{"path":"/reference/incluir_codigo_ibge.html","id":null,"dir":"Reference","previous_headings":"","what":"Incluir o codigo do IBGE — incluir_codigo_ibge","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"Incluir o codigo IBGE","code":""},{"path":"/reference/incluir_codigo_ibge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"","code":"incluir_codigo_ibge(   data_set,   tabela_referencia = munifacil::depara_muni_codigo(),   diagnostico = TRUE )"},{"path":"/reference/incluir_codigo_ibge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incluir o codigo do IBGE — incluir_codigo_ibge","text":"data_set base de dados arrumada, com colunas muni_join e uf_join tabela_referencia tabela de referencia. Por padrão usa uma base interna diagnostico imprimir diagnostico?","code":""},{"path":"/reference/limpar_colunas.html","id":null,"dir":"Reference","previous_headings":"","what":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Cria coluna limpa partir nome bruto dos municipios","code":""},{"path":"/reference/limpar_colunas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"","code":"limpar_colunas(data_set, col_muni, col_uf, default_muni, default_uf)"},{"path":"/reference/limpar_colunas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"data_set base de dados col_muni nome da coluna de municipio ser arrumada, sem aspas. col_uf nome da coluna de UF ser arrumada, sem aspas. default_muni (opcional) String. Ao invés de passar o nome de uma coluna de entrada, você pode preencher coluna de saída com uma string fixa. default_uf (opcional)  String. Ao invés de passar o nome de uma coluna de entrada, você pode preencher coluna de saída com uma string fixa.","code":""},{"path":"/reference/limpar_colunas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Esta funcao retorna base data_set acrescida das colunas \"muni_join\" e \"uf_join\". Essas colunas serao usadas na funcao incluir_codigo_ibge.","code":""},{"path":"/reference/limpar_colunas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cria coluna limpa a partir do nome bruto dos municipios — limpar_colunas","text":"Por padrao, o pacote espera receber os nomes das colunas nao em formato string, ou seja, sem aspas. Strings podem ser fornecidas para preencher colunas de saida com valores fixo, o seu valor sera utilizado para preencher colunas novas.","code":""},{"path":"/reference/limpar_muni.html","id":null,"dir":"Reference","previous_headings":"","what":"Limpa nome bruto dos municipios — limpar_muni","title":"Limpa nome bruto dos municipios — limpar_muni","text":"Limpa nome bruto dos municipios","code":""},{"path":"/reference/limpar_muni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limpa nome bruto dos municipios — limpar_muni","text":"","code":"limpar_muni(col)"},{"path":"/reference/limpar_muni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limpa nome bruto dos municipios — limpar_muni","text":"col coluna ser arrumada","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
